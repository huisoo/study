#Private Member 만드는 이유

-자동차 게임-
차량별로 [연료량] 및 [연비]는 랜덤
유저별로 차량 하나씩 고르면 게임 시작
주사위 굴려 랜덤하게 나온 [숫자 만큼] 이동
연료부족 이동 불가
가장 멀리간 사람이 승리

var car={
  fuel:10,
  power:2,
  total:0,
  run:function(km){
    var wasteFuel = km/this.power;
    if(this.fuel < wasteFuel){
      console.log('이동 불가');
      return;
    }
    this.fuel -= wasteFuel;
    this.total += km;
    
  }
}

car.power = 10;
car.fuel = 1000

문제점 : 외부에서 변경할 수 없어야한다

변경!!

var createCar = function(f,p){
  var fuel = f;
  var power = p;
  var total = 0;
  return {
    run: function(km){
      var wasteFuel = km/power;
      if(fuel < wasteFuel){
        console.log('이동불가');
        return;
      }
      fuel -= wasteFuel;
      total += km;
    }
  }
};

var car = createCar(10,2);  --> 임의로 연료, 연비 변경 불가이다.. ( 클로저를 활용해 private와 public을 구분했다.)

1. 함수에서 지역변수 및 내부함수 등을 생성한다.
2. 외부에 노출시키고자 하는 멤버들로 구성된 객체를 return 한다.
   -> return한 객체에 포함되지 않은 멤버들은 private 하다.
   -> return 한 객체는 public 하다.
